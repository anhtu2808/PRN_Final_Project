// <auto-generated />
using System;
using LaptopRentalManagement.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaptopRentalManagement.DAL.Migrations
{
    [DbContext(typeof(LaptopRentalDbContext))]
    [Migration("20250729035854_AddChat")]
    partial class AddChat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LaptopCategory", b =>
                {
                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("LaptopId", "CategoryId")
                        .HasName("pk_LaptopCategory");

                    b.HasIndex("CategoryId");

                    b.ToTable("LaptopCategory", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__349DA5A6B038BC0D");

                    b.HasIndex(new[] { "Email" }, "UQ__Account__A9D10534465320BF")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.HasKey("BrandId")
                        .HasName("PK__Brand__DAD4F05EA61E0654");

                    b.HasIndex(new[] { "Name" }, "UQ__Brand__737584F6D23B21A2")
                        .IsUnique();

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A0B11FB5713");

                    b.HasIndex(new[] { "Name" }, "UQ__Category__737584F6123D8C29")
                        .IsUnique();

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.ChatMessage", b =>
                {
                    b.Property<int>("ChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatMessageId"));

                    b.Property<int>("ChatRoomId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Text");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.HasKey("ChatMessageId");

                    b.HasIndex("ChatRoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.ChatRoom", b =>
                {
                    b.Property<int>("ChatRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatRoomId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCustomerActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStaffActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMessageAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Open");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ChatRoomId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("ChatRoom", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Laptop", b =>
                {
                    b.Property<int>("LaptopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaptopId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CPU");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Ram")
                        .HasColumnType("int")
                        .HasColumnName("RAM");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("PendingApproval");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.HasKey("LaptopId")
                        .HasName("PK__Laptop__19F02684D2D04B06");

                    b.HasIndex(new[] { "AccountId" }, "ix_Laptop_AccountId");

                    b.HasIndex(new[] { "BrandId" }, "ix_Laptop_BrandId");

                    b.ToTable("Laptop", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Payload")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E127411AEBF");

                    b.HasIndex("AccountId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("RenterId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal>("TotalCharge")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("ZaloPayTransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BCFAA91515F");

                    b.HasIndex(new[] { "LaptopId" }, "ix_Order_LaptopId");

                    b.HasIndex(new[] { "OwnerId" }, "ix_Order_OwnerId");

                    b.HasIndex(new[] { "RenterId" }, "ix_Order_RenterId");

                    b.HasIndex(new[] { "StartDate" }, "ix_Order_StartDate");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("NewStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_OrderLog");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLogs");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.OrderLogImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OrderLogId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_OrderLogImg");

                    b.HasIndex("OrderLogId");

                    b.ToTable("OrderLogImgs");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("RaterId")
                        .HasColumnType("int");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.HasKey("ReviewId")
                        .HasName("PK__Review__74BC79CEB4CFF5C5");

                    b.HasIndex("OrderId");

                    b.HasIndex("RaterId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Slot", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlotId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("SlotDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Available");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.HasKey("SlotId")
                        .HasName("PK__Slot__0A124AAFFF5C6A81");

                    b.HasIndex("OrderId");

                    b.HasIndex(new[] { "LaptopId", "SlotDate", "Status" }, "ix_Slot_LaptopDate_Status");

                    b.HasIndex(new[] { "LaptopId", "SlotDate" }, "uc_Slot_LaptopDate")
                        .IsUnique();

                    b.ToTable("Slot", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("RenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RespondedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Open");

                    b.HasKey("TicketId");

                    b.HasIndex("OrderId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("RenterId");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.TicketChatMessage", b =>
                {
                    b.Property<int>("TicketChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketChatMessageId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("TicketChatMessageId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketChatMessage", (string)null);
                });

            modelBuilder.Entity("LaptopCategory", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_LaptopCategory_Category");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Laptop", null)
                        .WithMany()
                        .HasForeignKey("LaptopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_LaptopCategory_Laptop");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.ChatMessage", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.ChatRoom", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ChatMessage_ChatRoom");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("fk_ChatMessage_Sender");

                    b.Navigation("ChatRoom");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.ChatRoom", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Customer")
                        .WithMany("CustomerChatRooms")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("fk_ChatRoom_Customer");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Staff")
                        .WithMany("StaffChatRooms")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_ChatRoom_Staff");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Laptop", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Account")
                        .WithMany("Laptops")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("fk_Laptop_Account");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Brand", "Brand")
                        .WithMany("Laptops")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("fk_Laptop_Brand");

                    b.Navigation("Account");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Notification", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Notification_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Order", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Laptop", "Laptop")
                        .WithMany("Orders")
                        .HasForeignKey("LaptopId")
                        .IsRequired()
                        .HasConstraintName("fk_Order_Laptop");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Owner")
                        .WithMany("OrderOwners")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("fk_Order_Owner");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Renter")
                        .WithMany("OrderRenters")
                        .HasForeignKey("RenterId")
                        .HasConstraintName("fk_Order_Renter");

                    b.Navigation("Laptop");

                    b.Navigation("Owner");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.OrderLog", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Order", "Order")
                        .WithMany("OrderLogs")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderLog_Order");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.OrderLogImg", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.OrderLog", "OrderLog")
                        .WithMany("OrderLogImgs")
                        .HasForeignKey("OrderLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderLogImg_OrderLog");

                    b.Navigation("OrderLog");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Review", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Order", "Order")
                        .WithMany("Reviews")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Review_Order");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Rater")
                        .WithMany("Reviews")
                        .HasForeignKey("RaterId")
                        .IsRequired()
                        .HasConstraintName("fk_Review_Rater");

                    b.Navigation("Order");

                    b.Navigation("Rater");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Slot", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Laptop", "Laptop")
                        .WithMany("Slots")
                        .HasForeignKey("LaptopId")
                        .IsRequired()
                        .HasConstraintName("fk_Slot_Laptop");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Order", "Order")
                        .WithMany("Slots")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_Slot_Order");

                    b.Navigation("Laptop");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Ticket", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Order", "Order")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Ticket_Order");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Owner")
                        .WithMany("OwnerTickets")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("fk_Ticket_OwnerAccount");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Renter")
                        .WithMany("RenterTickets")
                        .HasForeignKey("RenterId")
                        .IsRequired()
                        .HasConstraintName("fk_Ticket_RenterAccount");

                    b.Navigation("Order");

                    b.Navigation("Owner");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.TicketChatMessage", b =>
                {
                    b.HasOne("LaptopRentalManagement.DAL.Entities.Account", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("fk_TicketChatMessage_Sender");

                    b.HasOne("LaptopRentalManagement.DAL.Entities.Ticket", "Ticket")
                        .WithMany("ChatMessages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TicketChatMessage_Ticket");

                    b.Navigation("Sender");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Account", b =>
                {
                    b.Navigation("CustomerChatRooms");

                    b.Navigation("Laptops");

                    b.Navigation("Notifications");

                    b.Navigation("OrderOwners");

                    b.Navigation("OrderRenters");

                    b.Navigation("OwnerTickets");

                    b.Navigation("RenterTickets");

                    b.Navigation("Reviews");

                    b.Navigation("SentMessages");

                    b.Navigation("StaffChatRooms");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Brand", b =>
                {
                    b.Navigation("Laptops");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.ChatRoom", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Laptop", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Slots");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Order", b =>
                {
                    b.Navigation("OrderLogs");

                    b.Navigation("Reviews");

                    b.Navigation("Slots");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.OrderLog", b =>
                {
                    b.Navigation("OrderLogImgs");
                });

            modelBuilder.Entity("LaptopRentalManagement.DAL.Entities.Ticket", b =>
                {
                    b.Navigation("ChatMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
