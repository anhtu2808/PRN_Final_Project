@page "{id:int}"
@model LaptopRentalManagement.Pages.User.Rental_orders.IndexModel
@{
    ViewData["Title"] = "Chi tiết đơn thuê";
    Layout = "~/Pages/Shared/_CustomerLayout.cshtml";
}
<div class="text-end mb-3">
    <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#rentOutModal">
        <i class="fas fa-laptop-house me-2"></i>Đăng cho thuê
    </button>
</div>
<div class="container py-4">
    <h2 class="mb-4">Chi tiết Laptop: @(Model.Laptop?.Name ?? "Không xác định")</h2>

    <div class="row">
        <div class="col-md-6">
            <img src="@Model.Laptop.ImageURL" class="img-fluid rounded shadow-sm" alt="Laptop image" />
        </div>
        <div class="col-md-6">
            <h4>@Model.Laptop.Name</h4>
            <p><strong>Thương hiệu:</strong> @Model.Laptop.Brand.Name</p>
            <p><strong>Giá thuê/ngày:</strong> @Model.Laptop.PricePerDay.ToString("N0") đ</p>
            <p><strong>CPU:</strong> @Model.Laptop.Cpu</p>
            <p><strong>RAM:</strong> @Model.Laptop.Ram GB</p>
            <p><strong>Lưu trữ:</strong> @Model.Laptop.Storage GB</p>
            <p><strong>Chủ sở hữu:</strong> @Model.Laptop.Owner.Name</p>
        </div>
    </div>

    <hr class="my-4" />

    <h4 class="mb-3">Lịch sử đơn thuê</h4>
    @if (Model.Orders != null && Model.Orders.Any())
    {
        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Người thuê</th>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày kết thúc</th>
                    <th>Trạng thái</th>
                    <th>Tổng phí</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders.OrderByDescending(o => o.StartDate))
                {
                    <tr>
                        <td>@order.OrderId</td>
                        <td>@(order.Renter?.Name ?? "Chưa có")</td>
                        <td>@order.StartDate.ToString("dd/MM/yyyy")</td>
                        <td>@order.EndDate.ToString("dd/MM/yyyy")</td>
                        <td>@order.Status</td>
                        <td>@order.TotalCharge.ToString("N0") đ</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted">Chưa có đơn thuê nào cho laptop này.</p>
    }

    <hr class="my-4" />

    <h4 class="mb-3">Các ngày thuê (Slot)</h4>
    <div class="card-body">
        @if (Model.Laptop.Slots.Any())
        {
            <div class="d-flex overflow-auto gap-3 py-2">
                @foreach (var slot in Model.Laptop.Slots.OrderBy(s => s.SlotDate))
                {
                    var isAvailable = slot.Status == "Available";
                    var cardClass = isAvailable
                    ? "bg-light border border-secondary text-secondary"
                    : "bg-success text-white border border-success";
                    var icon = isAvailable
                    ? "fas fa-times-circle me-1"
                    : "fas fa-check-circle me-1";
                    var dayOfWeek = slot.SlotDate.ToString("dddd", new System.Globalization.CultureInfo("vi-VN"));

                    <div class="rounded p-4 text-center shadow-sm min-w-200px @cardClass">
                        <div class="fs-6 fw-bold text-uppercase">@dayOfWeek</div>
                        <div class="fs-5">@slot.SlotDate.ToString("dd/MM/yyyy")</div>
                        <div class="mt-2 d-flex align-items-center justify-content-center">
                            <i class="@icon fa-lg"></i>
                            <span class="fw-semibold">
                                @(isAvailable ? "Chưa được thuê" : "Đã có người thuê")
                            </span>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">Không có ngày thuê nào được ghi nhận.</p>
        }
    </div>
</div>

@await Html.PartialAsync("_RentOutModal", Model.Laptop)