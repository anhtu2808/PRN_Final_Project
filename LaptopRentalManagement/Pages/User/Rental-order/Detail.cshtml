@page "{orderId:int}"
@model LaptopRentalManagement.Pages.User.Rental_order.DetailModel
@{
	ViewData["Title"] = "Rental Order Details";
	Layout = "~/Pages/Shared/_CustomerLayout.cshtml";

	var status = Model.Order?.Status ?? "Unknown";

	var slotDates = Model.Order.Slots.Select(s => s.SlotDate).OrderBy(d => d).ToList();
        var start = slotDates.FirstOrDefault();
        var end = slotDates.LastOrDefault();
        var totalDays = slotDates.Count;
        var isRenting = status == "Renting";
        var today = DateOnly.FromDateTime(DateTime.UtcNow);
        var canConfirmReturn = isRenting && today >= end.AddDays(1);
        var currentStep = status switch
        {
                "Unpaid" => 1,
                "Pending" => 2,
                "Approved" => 3,
                "Delivering" => 4,
                "Renting" => 5,
                "Completed" => 6,
                "Cancelled" => 7,
                _ => 0
        };
}



<div class="container py-5">

	<!-- Breadcrumb -->
	<nav aria-label="breadcrumb" class="mb-4">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="/">Home</a></li>
			<li class="breadcrumb-item"><a href="/user/rental-order">My Orders</a></li>
			<li class="breadcrumb-item active" aria-current="page">Order #@Model.Order?.OrderId</li>
		</ol>
	</nav>

	@if (Model.Order == null)
	{
		<div class="alert alert-danger text-center">Order not found.</div>
	}
	else
	{
		<!-- Order Status -->
		<div class="mb-5">
			<div class="d-flex justify-content-between align-items-center mb-4">
				<h5 class="fw-bold mb-0">Order Progress</h5>


                                <div class="d-flex gap-2">
                                        @if (canConfirmReturn)
                                        {
                                                <!-- Nút xác nhận đã trả -->
                                                <form method="post" asp-page-handler="ConfirmReturn" asp-route-orderId="@Model.Order.OrderId">
                                                        <button type="submit" class="btn btn-success btn-sm">
                                                                <i class="fas fa-check-circle me-1"></i> Confirm Return
                                                        </button>
                                                </form>
                                        }
					<!-- Nút khiếu nại -->
					<button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#ticketModal">
						<i class="fas fa-life-ring me-1"></i> Send ticket
					</button>
				</div>

			</div>
                        <div class="stepper">
                                <!-- Step 1: Unpaid -->
                                <div class="step @(currentStep > 1 ? "complete" : currentStep == 1 ? "active" : "upcoming")">
                                        <div class="circle">1</div>
                                        <div class="step-label">Unpaid</div>
                                </div>

                                <!-- Step 2: Pending -->
                                <div class="step @(currentStep > 2 ? "complete" : currentStep == 2 ? "active" : "upcoming")">
                                        <div class="circle">2</div>
                                        <div class="step-label">Pending</div>
                                </div>

                                <!-- Step 3: Approved -->
                                <div class="step @(currentStep > 3 ? "complete" : currentStep == 3 ? "active" : "upcoming")">
                                        <div class="circle">3</div>
                                        <div class="step-label">Approved</div>
                                </div>

                                <!-- Step 4: Delivering -->
                                <div class="step @(currentStep > 4 ? "complete" : currentStep == 4 ? "active" : "upcoming")">
                                        <div class="circle">4</div>
                                        <div class="step-label">Delivering</div>
                                </div>

                                <!-- Step 5: Renting -->
                                <div class="step @(currentStep > 5 ? "complete" : currentStep == 5 ? "active" : "upcoming")">
                                        <div class="circle">5</div>
                                        <div class="step-label">Renting</div>
                                </div>

                                <!-- Step 6: Complete -->
                                <div class="step @(currentStep > 6 ? "complete" : currentStep == 6 ? "active" : "upcoming")">
                                        <div class="circle">6</div>
                                        <div class="step-label">Complete</div>
                                </div>

                                <!-- Step 7: Cancelled -->
                                <div class="step @(currentStep == 7 ? "active" : "upcoming")">
                                        <div class="circle">7</div>
                                        <div class="step-label">Cancelled</div>
                                </div>
                        </div>
		</div>
		<div class="row">
			<!-- LEFT: Thông tin laptop + Slots -->
			<div class="col-lg-7">
				<!-- Card: Thông tin cơ bản của laptop -->
				<div class="card mb-4">
					<div class="card-body">
						<h5 class="card-title">@Model.Order.Laptop.Name</h5>
						<p class="text-muted">Brand: @Model.Order.Laptop.Brand.Name</p>
						<p><strong>Price/day:</strong> @Model.Order.Laptop.PricePerDay.ToString("N0")₫</p>
                                                <p><strong>Rental Fee:</strong> <span class="text-primary fw-bold">@Model.Order.RentalFee.ToString("N0")₫</span></p>
                                                <p><strong>Deposit:</strong> <span class="text-warning fw-bold">@Model.Order.DepositAmount.ToString("N0")₫</span></p>
                                                <p><strong>Total:</strong> <span class="text-primary fw-bold">@Model.Order.TotalCharge.ToString("N0")₫</span></p>
						<p>
							<strong>Owner:</strong><br />
							@Model.Order.Owner.Name<br />
							<small class="text-muted">@Model.Order.Owner.Email</small>
						</p>
					</div>
				</div>

				<!-- Card: Hiển thị Slots -->
				<div class="card mb-4">
					<div class="card-body">
						<h5 class="card-title mb-3">Rental Schedule</h5>
						<div class="d-flex overflow-auto gap-3">
							@foreach (var slot in Model.Order.Slots.OrderBy(s => s.SlotDate))
							{
								var dayOfWeek = slot.SlotDate.ToString("dddd", new System.Globalization.CultureInfo("en-US"));

								<div class="rounded p-3 text-center shadow-sm min-w-200px">
									<div class="fw-bold text-uppercase">@dayOfWeek</div>
									<div>@slot.SlotDate.ToString("dd/MM/yyyy")</div>

								</div>
							}
						</div>
					</div>
				</div>
			</div>

			<!-- RIGHT: Order Logs -->
			<div class="col-lg-5">
				<div class="card mb-4">
					<div class="card-body scroll-box">
							<h5 class="card-title mb-3">Order Logs</h5>

							@if (Model.Logs != null && Model.Logs.Any())
							{
								<ul class="list-group list-group-flush">
									@foreach (var log in Model.Logs.OrderByDescending(l => l.CreatedAt))
									{
										var modalId = $"logImgModal_{log.Id}";
										<li class="list-group-item">
											<div class="d-flex justify-content-between align-items-start mb-1">
												<span class="fw-semibold">@log.Content</span>
												<small class="text-muted">@log.CreatedAt.ToString("HH:mm dd-MM-yyyy")</small>
											</div>

											@if (!string.IsNullOrWhiteSpace(log.OldStatus) || !string.IsNullOrWhiteSpace(log.NewStatus))
											{
												<div class="mt-1">
													<span class="badge bg-secondary">@log.OldStatus</span>
													<i class="fas fa-arrow-right mx-1 text-muted"></i>
													<span class="badge bg-success">@log.NewStatus</span>
												</div>
											}

											@if (log.LogImg != null && log.LogImg.Any())
											{
												<div class="mt-2">
													<a href="#" class="text-decoration-underline text-primary small" data-bs-toggle="modal" data-bs-target="#@modalId">
														📷 Click to open images
													</a>

													<!-- Modal hiển thị ảnh -->
													<div class="modal fade" id="@modalId" tabindex="-1" aria-hidden="true">
														<div class="modal-dialog modal-dialog-centered modal-xl">
															<div class="modal-content">
																<div class="modal-header">
																	<h5 class="modal-title">Images for log #@log.Id</h5>
																	<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
																</div>
																<div class="modal-body">
																	<div class="d-flex flex-wrap gap-3 justify-content-start">
																		@foreach (var imgUrl in log.LogImg)
																		{
																			<img src="@imgUrl" class="img-thumbnail" style="max-height: 200px;" />
																		}
																	</div>
																</div>
															</div>
														</div>
													</div>
												</div>
											}
										</li>
									}
								</ul>
							}
							else
							{
								<p class="text-muted">No logs available for this order.</p>
							}
						</div>
					</div>
					<!-- Tickets -->
					<div class="card mb-4">
						<div class="card-body scroll-box">
							<h5 class="card-title mb-3">Tickets</h5>

							@if (Model.Tickets != null && Model.Tickets.Any())
							{
								<ul class="list-group list-group-flush">
									@foreach (var t in Model.Tickets.OrderByDescending(x => x.CreatedAt))
									{
										<li class="list-group-item">
											<div class="d-flex justify-content-between align-items-start">
												<div>
													<span class="fw-semibold">Ticket #@t.TicketId</span>
													<span class="badge bg-info">
														@t.Status
													</span>
												</div>
												<small class="text-muted">@t.CreatedAt.ToString("HH:mm dd-MM-yyyy")</small>
											</div>
											<p class="mt-2 mb-1">@t.Content</p>

											@if (t.RespondedAt.HasValue)
											{
												<div class="border-start ps-3">
													<small class="text-muted">
                                                                               Responded at @t.RespondedAt.Value.ToString("HH:mm dd-MM-yyyy")
													</small>
													<p class="mb-1">@t.Response</p>
												</div>
											}
										</li>
									}
								</ul>
							}
							else
							{
                                                                <p class="text-muted mb-0">No support requests yet.</p>
							}
						</div>
					</div>
			</div>
		</div>
	}
</div>

@await Html.PartialAsync(
				"~/Pages/User/Rental-Order/_TicketModal.cshtml",
				new LaptopRentalManagement.BLL.DTOs.Request.CreateTicketRequest
			{
				OrderId = Model.Order.OrderId
			}
					)

@section Styles {
	<link rel="stylesheet" href="~/css/order-progress.css" />
	<style>
		.scroll-box {
			max-height: 450px;
			overflow-y: auto;
		}

			/* Tùy chọn: thanh cuộn mượt và đẹp hơn */
			.scroll-box::-webkit-scrollbar {
				width: 8px;
			}

			.scroll-box::-webkit-scrollbar-thumb {
				background-color: rgba(0, 0, 0, 0.2);
				border-radius: 4px;
			}
	</style>
}