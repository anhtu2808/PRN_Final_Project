@page
@using System.Globalization
@model IndexModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<!-- Dashboard Stats -->
<div class="row mb-4">
    <!-- Total Orders -->
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="card-title mb-1">Total Orders</h6>
                        <h3 class="mb-0">@Model.DashboardData.Stats.TotalOrders.ToString("N0")</h3>
                        <small
                            class="text-white-50">@Model.DashboardData.Stats.OrderGrowth.ToString("+#,##0.0;-#,##0.0;0")%
                            from last month</small>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-shopping-cart fa-2x opacity-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Revenue -->
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="card-title mb-1">Revenue</h6>
                        <h3 class="mb-0">@Model.DashboardData.Stats.Revenue.ToString("c0", new CultureInfo("vi-VN"))</h3>
                        <small
                            class="text-white-50">@Model.DashboardData.Stats.RevenueGrowth.ToString("+#,##0.0;-#,##0.0;0")%
                            from last month</small>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-dollar-sign fa-2x opacity-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Active Rentals -->
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="card-title mb-1">Active Rentals</h6>
                        <h3 class="mb-0">@Model.DashboardData.Stats.ActiveRentals</h3>
                        <small class="text-white-50">@Model.DashboardData.Stats.DueToday due today</small>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-laptop fa-2x opacity-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Customers -->
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="card-title mb-1">Customers</h6>
                        <h3 class="mb-0">@Model.DashboardData.Stats.TotalCustomers</h3>
                        <small class="text-white-50">+@Model.DashboardData.Stats.NewCustomersThisWeek new this
                            week</small>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-users fa-2x opacity-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row mb-4">
    <div class="col-lg-8 mb-3">
        <div class="card">
            <div class="card-header"><h5 class="card-title mb-0">Revenue Overview (Last 12 Months)</h5></div>
            <div class="card-body">
                <canvas id="revenueChart" height="120"></canvas>
            </div>
        </div>
    </div>

    <div class="col-lg-4 mb-3">
        <div class="card">
            <div class="card-header"><h5 class="card-title mb-0">Order Status</h5></div>
            <div class="card-body">
                <canvas id="orderStatusChart" height="200"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Recent Orders Table -->
<div class="row">
    <div class="col-lg-12 mb-3">
        <div class="card">
            <div class="card-header d-flex align-items-center justify-content-between">
                <h5 class="card-title mb-0">Recent Orders</h5>
                <a href="/manage/orders" class="btn btn-sm btn-outline-primary">View All</a>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                        <tr>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Laptop</th>
                            <th>Order Date</th>
                            <th>Amount</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        @if (Model.DashboardData.RecentOrders != null && Model.DashboardData.RecentOrders.Any())
                        {
                            @foreach (var order in Model.DashboardData.RecentOrders)
                            {
                                <tr>
                                    <td><span class="badge bg-light text-dark">#ORD-@order.Id</span></td>
                                    <td>
                                        <div class="fw-medium">@order.CustomerName</div>
                                    </td>
                                    <td>@order.LaptopModel</td>
                                    <td>@order.OrderDate.ToString("dd MMM yyyy")</td>
                                    <td class="fw-medium">@order.Amount.ToString("c0", new CultureInfo("vi-VN"))</td>
                                    <td><span class="badge bg-@GetStatusBadgeClass(order.Status)">@order.Status</span>
                                    </td>
                                    <td>
                                        <a href="/manage/orders/details/@order.Id"
                                           class="btn btn-sm btn-outline-primary" title="View">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">No recent orders found.</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {

    // Helper function để chọn màu cho badge status
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "completed" => "success",
            "active" => "success",
            "renting" => "success",
            "pending" => "warning",
            "overdue" => "danger",
            "cancelled" => "secondary",
            "confirmed" => "success",
            _ => "light"
        };
    }

}


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Parse dữ liệu từ Model một cách an toàn
            const revenueData = JSON.parse('@Html.Raw(Model.MonthlyRevenueChartDataJson ?? "{}")');
            const orderStatusData = JSON.parse('@Html.Raw(Model.OrderStatusChartDataJson ?? "{}")');

            // Revenue Chart
            if (document.getElementById('revenueChart') && revenueData.labels) {
                const revenueCtx = document.getElementById('revenueChart').getContext('2d');
                new Chart(revenueCtx, {
                    type: 'line',
                    data: {
                        labels: revenueData.labels, // <-- Dữ liệu động
                        datasets: [{
                            label: 'Revenue',
                            data: revenueData.values, // <-- Dữ liệu động
                            borderColor: 'rgb(79, 70, 229)',
                            backgroundColor: 'rgba(79, 70, 229, 0.1)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {legend: {display: false}},
                        scales: {
                            y: {beginAtZero: true, grid: {color: 'rgba(0, 0, 0, 0.05)'}},
                            x: {grid: {display: false}}
                        }
                    }
                });
            }

            // Order Status Chart (thay thế cho Popular Laptops)
            if (document.getElementById('orderStatusChart') && orderStatusData.labels) {
                const orderStatusCtx = document.getElementById('orderStatusChart').getContext('2d');
                new Chart(orderStatusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: orderStatusData.labels, // <-- Dữ liệu động
                        datasets: [{
                            data: orderStatusData.values, // <-- Dữ liệu động
                            backgroundColor: [
                                'rgb(16, 185, 129)',
                                'rgb(245, 158, 11)',
                                'rgb(239, 68, 68)',
                                'rgb(79, 70, 229)',
                                'rgb(107, 114, 128)'
                            ]
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {legend: {position: 'bottom', labels: {padding: 20, usePointStyle: true}}}
                    }
                });
            }
        });
    </script>
}