@page "/manage/tickets/chat/{ticketId:int}"
@model LaptopRentalManagement.Pages.Manage.Tickets.ChatModel
@{
    ViewData["Title"] = "Ticket Chat";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<div class="container py-4">
    <h2 class="mb-3">Chat for Ticket #@Model.TicketId</h2>
    <div id="messages" class="messages-container flex-grow-1 mb-3">
        @foreach (var msg in Model.Messages)
        {
            var cls = msg.SenderId == Model.CurrentUserId ? "message message-sent" : "message message-received";
            <div class="@cls">
                <div class="message-content">
                    <div class="message-header"><strong>@msg.SenderName</strong><span class="ms-2">@msg.SentAt.ToString("HH:mm")</span></div>
                    <div class="message-body">@msg.Content</div>
                </div>
            </div>
        }
    </div>
    <div class="input-group chat-footer">
        <input id="messageInput" class="form-control" placeholder="Type a message" autocomplete="off" />
        <button id="sendBtn" class="btn btn-primary">Send</button>
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
        const ticketId = @Model.TicketId;
        const connection = new signalR.HubConnectionBuilder().withUrl('/ticketChatHub').build();

        connection.on('ReceiveMessage', msg => {
            if(msg.ticketId !== ticketId) return;
            const div = document.createElement('div');
            const cls = msg.senderId == @Model.CurrentUserId ? 'message message-sent' : 'message message-received';
            div.className = cls;
            div.innerHTML = `<div class='message-content'><div class='message-header'><strong>${msg.senderName}</strong><span class='ms-2'>${new Date(msg.sentAt).toLocaleTimeString()}</span></div><div class='message-body'>${msg.content}</div></div>`;
            const container = document.getElementById('messages');
            container.appendChild(div);
            container.scrollTop = container.scrollHeight;
        });

        connection.start().then(() => {
            connection.invoke('JoinTicket', ticketId);
        });

        document.getElementById('sendBtn').addEventListener('click', () => {
            const text = document.getElementById('messageInput').value.trim();
            if(text){
                connection.invoke('SendMessage', ticketId, text);
                document.getElementById('messageInput').value = '';
            }
        });
    </script>
}
